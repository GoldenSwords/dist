{"version":3,"sources":["webpack:///./src/plugins/mouse/FlyLines.js","webpack:///./node_modules/@babel/runtime-corejs3/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime-corejs3/helpers/esm/classCallCheck.js"],"names":["FlyLines","map","this","data","addData","instance","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","Constructor","protoProps","staticProps","prototype","_classCallCheck","TypeError"],"mappings":"+JAAMA,E,WACJ,WAAYC,GAAK,uBACfC,KAAKD,IAAMA,E,oDAERE,GACHD,KAAKD,IAAIG,QAAQD,O,KAGrBH,EAASK,SAAW,SAASJ,GAC3B,OAAO,IAAID,EAASC,IAEPD,gB,oCCXf,2DAEA,SAASM,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GAEjD,IAAuBP,EAAQI,EAAWI,IAAKJ,IAIpC,SAASK,EAAaC,EAAaC,EAAYC,GAG5D,OAFID,GAAYZ,EAAkBW,EAAYG,UAAWF,GACrDC,GAAab,EAAkBW,EAAaE,GACzCF,I,oCChBM,SAASI,EAAgBhB,EAAUY,GAChD,KAAMZ,aAAoBY,GACxB,MAAM,IAAIK,UAAU,qCAFxB","file":"js/chunk-e4c07c76.6e69a049.js","sourcesContent":["class FlyLines {\r\n  constructor(map) {\r\n    this.map = map;\r\n  }\r\n  tool(data) {\r\n    this.map.addData(data);\r\n  }\r\n}\r\nFlyLines.instance = function(map) {\r\n  return new FlyLines(map);\r\n};\r\nexport default FlyLines;\r\n","import _Object$defineProperty from \"../../core-js/object/define-property\";\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}"],"sourceRoot":""}