{"version":3,"sources":["webpack:///./src/views/three/ThreeSenceMany.vue?cb9b","webpack:///src/views/three/ThreeSenceMany.vue","webpack:///./src/views/three/ThreeSenceMany.vue?785e","webpack:///./src/views/three/ThreeSenceMany.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","staticStyle","staticRenderFns","name","data","canvas","scenes","limit","rect","w","h","renderer","mounted","$refs","clientWidth","clientHeight","init","methods","geometries","scene","camera","position","z","userData","geometry","material","color","roughness","metalness","flatShading","add","light","set","push","context","getContext","antialias","setClearColor","setPixelRatio","window","devicePixelRatio","animate","updateSize","width","height","setSize","instanceId","requestAnimationFrame","setScissorTest","clear","forEach","children","rotation","y","Date","now","left","x","bottom","console","log","_this","setViewport","setScissor","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,SAAS,CAACE,IAAI,SAASC,YAAY,CAAC,MAAQ,OAAO,OAAS,WAC3JC,EAAkB,G,4CCMtB,GACEC,KAAM,iBACNC,KAFF,WAGI,MAAO,CACLC,OAAQ,KACRC,OAAQ,GACRC,MAAO,GACPC,KAAM,CACJC,EAAG,EACHC,EAAG,GAELC,SAAU,OAGdC,QAdF,WAeIjB,KAAKa,KAAKC,EAAId,KAAKkB,MAAMR,OAAOS,YAAc,EAC9CnB,KAAKa,KAAKE,EAAIf,KAAKkB,MAAMR,OAAOU,aAAe,EAC/CpB,KAAKqB,QAEPC,QAAS,CACPD,KADJ,WAEMrB,KAAKU,OAASV,KAAKkB,MAAMR,OAOzB,IANA,IAAIa,EAAa,CACvB,kBACA,oBACA,eACA,wBAEA,sBACQ,IAAIC,EAAQ,IAAI,EAAxB,KAEYC,EAAS,IAAI,EAAzB,gBACQA,EAAOC,SAASC,EAAI,EACpBH,EAAMI,SAASH,OAASA,EAQxB,IAAII,EAAWN,EAAW,EAAlC,wBACYO,EAAW,IAAI,EAA3B,MACUC,OAAO,IAAI,EAArB,kCACUC,UAAW,GACXC,UAAW,EACXC,aAAa,IAEfV,EAAMW,IAAI,IAAI,EAAtB,WACQX,EAAMW,IAAI,IAAI,EAAtB,wBACQ,IAAIC,EAAQ,IAAI,EAAxB,kBACQA,EAAMV,SAASW,IAAI,EAAG,EAAG,GACzBb,EAAMW,IAAIC,GACVpC,KAAKW,OAAO2B,KAAKd,GAEnBxB,KAAKgB,SAAW,IAAI,EAA1B,MACQN,OAAQV,KAAKU,OACb6B,QAASvC,KAAKU,OAAO8B,WAAW,UAChCC,WAAW,IAEbzC,KAAKgB,SAAS0B,cAAc,SAAU,GACtC1C,KAAKgB,SAAS2B,cAAcC,OAAOC,kBACnC7C,KAAK8C,WAEPC,WA7CJ,WA8CM,IAAIC,EAAQhD,KAAKU,OAAOS,YACpB8B,EAASjD,KAAKU,OAAOU,aACrBpB,KAAKU,OAAOsC,QAAUA,GAAShD,KAAKU,OAAOuC,SAAWA,GACxDjD,KAAKgB,SAASkC,QAAQF,EAAOC,GAAQ,IAGzCH,QApDJ,WAoDA,WACM9C,KAAKF,SACLE,KAAKmD,WAAaP,OAAOQ,uBAAsB,WAC7C,EAAR,cAGItD,OA1DJ,WA0DA,WACA,OACME,KAAK+C,aAEL/C,KAAKgB,SAAS0B,cAAc,UAC5B1C,KAAKgB,SAASqC,gBAAe,GAC7BrD,KAAKgB,SAASsC,QACdtD,KAAKgB,SAAS0B,cAAc,UAC5B1C,KAAKgB,SAASqC,gBAAe,GAC7B,IAAN,IACA,IACMrD,KAAKW,OAAO4C,SAAQ,SAA1B,GAEQ/B,EAAMgC,SAAS,GAAGC,SAASC,EAAiB,KAAbC,KAAKC,MAcpC,IAAIZ,EAAQ,EAApB,OACYC,EAAS,EAArB,OACYY,EAAOC,EAAId,EACXe,EAASL,EAAIT,EACjBe,QAAQC,IAAIJ,EAAME,EAAQf,EAAOC,GACjCiB,EAAMlD,SAASmD,YAAYN,EAAME,EAAQf,EAAOC,GAChDiB,EAAMlD,SAASoD,WAAWP,EAAME,EAAQf,EAAOC,GAC/C,IAAIxB,EAASD,EAAMI,SAASH,OAI5ByC,EAAMlD,SAASlB,OAAO0B,EAAOC,GAC7BqC,GAAK,EACDD,GAAQ,EAApB,qBACUC,EAAI,EACJJ,GAAK,SC9HwV,I,YCOnWW,EAAY,eACd,EACAvE,EACAS,GACA,EACA,KACA,WACA,MAIa,aAAA8D,E","file":"js/chunk-2d0b93e2.da3c8362.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('canvas',{ref:\"canvas\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <canvas ref=\"canvas\" style=\"width: 100%;height: 100%;\"></canvas>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from \"three\";\r\n// import { OrbitControls } from \"../../../node_modules/three/examples/jsm/controls/OrbitControls\";\r\nexport default {\r\n  name: \"ThreeSenceMany\",\r\n  data() {\r\n    return {\r\n      canvas: null,\r\n      scenes: [],\r\n      limit: 40,\r\n      rect: {\r\n        w: 0,\r\n        h: 0\r\n      },\r\n      renderer: null\r\n    };\r\n  },\r\n  mounted() {\r\n    this.rect.w = this.$refs.canvas.clientWidth / 4;\r\n    this.rect.h = this.$refs.canvas.clientHeight / 4;\r\n    this.init();\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.canvas = this.$refs.canvas;\r\n      var geometries = [\r\n        new THREE.BoxBufferGeometry(1, 1, 1),\r\n        new THREE.SphereBufferGeometry(0.5, 12, 8),\r\n        new THREE.DodecahedronBufferGeometry(0.5),\r\n        new THREE.CylinderBufferGeometry(0.5, 0.5, 1, 12)\r\n      ];\r\n      for (let i = 0; i < this.limit; i++) {\r\n        var scene = new THREE.Scene();\r\n        // make a list item\r\n        var camera = new THREE.PerspectiveCamera(50, 1, 1, 10);\r\n        camera.position.z = 2;\r\n        scene.userData.camera = camera;\r\n        // var controls = new OrbitControls(scene.userData.camera);\r\n        // controls.minDistance = 2;\r\n        // controls.maxDistance = 5;\r\n        // controls.enablePan = false;\r\n        // controls.enableZoom = false;\r\n        // scene.userData.controls = controls;\r\n        // add one random mesh to each scene\r\n        var geometry = geometries[(geometries.length * Math.random()) | 0];\r\n        var material = new THREE.MeshStandardMaterial({\r\n          color: new THREE.Color().setHSL(Math.random(), 1, 0.75),\r\n          roughness: 0.5,\r\n          metalness: 0,\r\n          flatShading: true\r\n        });\r\n        scene.add(new THREE.Mesh(geometry, material));\r\n        scene.add(new THREE.HemisphereLight(0xaaaaaa, 0x444444));\r\n        var light = new THREE.DirectionalLight(0xffffff, 0.5);\r\n        light.position.set(1, 1, 1);\r\n        scene.add(light);\r\n        this.scenes.push(scene);\r\n      }\r\n      this.renderer = new THREE.WebGLRenderer({\r\n        canvas: this.canvas,\r\n        context: this.canvas.getContext(\"webgl2\"),\r\n        antialias: true\r\n      });\r\n      this.renderer.setClearColor(0xffffff, 1);\r\n      this.renderer.setPixelRatio(window.devicePixelRatio);\r\n      this.animate();\r\n    },\r\n    updateSize() {\r\n      var width = this.canvas.clientWidth;\r\n      var height = this.canvas.clientHeight;\r\n      if (this.canvas.width !== width || this.canvas.height !== height) {\r\n        this.renderer.setSize(width, height, false);\r\n      }\r\n    },\r\n    animate() {\r\n      this.render();\r\n      this.instanceId = window.requestAnimationFrame(() => {\r\n        this.animate();\r\n      });\r\n    },\r\n    render() {\r\n      const _this = this;\r\n      this.updateSize();\r\n      // this.canvas.style.transform = `translateY(${window.scrollY}px)`;\r\n      this.renderer.setClearColor(0xffffff);\r\n      this.renderer.setScissorTest(false);\r\n      this.renderer.clear();\r\n      this.renderer.setClearColor(0xe0e0e0);\r\n      this.renderer.setScissorTest(true);\r\n      let x = 0;\r\n      let y = 0;\r\n      this.scenes.forEach(scene => {\r\n        // so something moves\r\n        scene.children[0].rotation.y = Date.now() * 0.001;\r\n        // get the element that is a place holder for where we want to\r\n        // draw the scene\r\n        // get its position relative to the page's viewport\r\n        // check if it's offscreen. If so skip it\r\n        // if (\r\n        //   rect.bottom < 0 ||\r\n        //   rect.top > this.renderer.domElement.clientHeight ||\r\n        //   rect.right < 0 ||\r\n        //   rect.left > this.renderer.domElement.clientWidth\r\n        // ) {\r\n        //   return; // it's off screen\r\n        // }\r\n        // set the viewport\r\n        var width = this.rect.w;\r\n        var height = this.rect.h;\r\n        var left = x * width;\r\n        var bottom = y * height;\r\n        console.log(left, bottom, width, height);\r\n        _this.renderer.setViewport(left, bottom, width, height);\r\n        _this.renderer.setScissor(left, bottom, width, height);\r\n        var camera = scene.userData.camera;\r\n        //camera.aspect = width / height; // not changing in this example\r\n        //camera.updateProjectionMatrix();\r\n        //scene.userData.controls.update();\r\n        _this.renderer.render(scene, camera);\r\n        x += 1;\r\n        if (left >= this.canvas.clientWidth) {\r\n          x = 0;\r\n          y += 1;\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeSenceMany.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeSenceMany.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ThreeSenceMany.vue?vue&type=template&id=2e7820e8&scoped=true&\"\nimport script from \"./ThreeSenceMany.vue?vue&type=script&lang=js&\"\nexport * from \"./ThreeSenceMany.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2e7820e8\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}