{"version":3,"sources":["webpack:///./node_modules/core-js/internals/string-repeat.js","webpack:///./src/page/three/threeSprite.vue?4292","webpack:///src/page/three/threeSprite.vue","webpack:///./src/page/three/threeSprite.vue?4ba4","webpack:///./src/page/three/threeSprite.vue","webpack:///./node_modules/core-js/modules/es.string.repeat.js","webpack:///./src/assets/water.png"],"names":["toInteger","requireObjectCoercible","module","exports","repeat","count","str","String","this","result","n","Infinity","RangeError","render","_vm","_h","$createElement","_c","_self","ref","staticStyle","style","staticRenderFns","name","props","h","Number","data","camera","scene","player","cube","system","cameraOpt","angle","min","max","mounted","console","log","renderAll","methods","renderInit","renderCube","renderSystem","img","animation","canvas","$refs","container","setSize","w","position","set","lookAt","texture","wrapS","wrapT","uniforms","pointTexture","vertexShader","fragmentShader","depthTest","transparent","vertexColors","positions","push","Math","random","radius","colors","color","r","g","b","sizes","geometry","setAttribute","add","rotation","x","y","z","requestAnimationFrame","component","$","target","proto"],"mappings":"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","file":"js/chunk-c758368c.f29e27d7.js","sourcesContent":["'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nmodule.exports = ''.repeat || function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('canvas',{ref:\"container\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"},style:({})})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <canvas ref=\"container\" style=\"width: 100%;height: 100%\" :style=\"{}\"></canvas>\r\n</template>\r\n\r\n<script>\r\nimport * as THREE from \"three\";\r\nexport default {\r\n  name: \"threeSprite\",\r\n  props: {\r\n    h: Number\r\n  },\r\n  data() {\r\n    return {\r\n      render: null,\r\n      camera: null,\r\n      scene: null,\r\n      player: true,\r\n      cube: null,\r\n      system: null,\r\n      cameraOpt: {\r\n        angle: 70,\r\n        min: 0.1,\r\n        max: 1000\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    console.log(1);\r\n    this.renderAll();\r\n  },\r\n  methods: {\r\n    renderAll() {\r\n      this.renderInit();\r\n      this.renderCube();\r\n      const img = require(\"@/assets/water.png\");\r\n      this.renderSystem(img, 200);\r\n      this.animation();\r\n    },\r\n    renderInit() {\r\n      const w = this.$refs.container.clientWidth;\r\n      const h = this.$refs.container.clientHeight;\r\n      this.render = new THREE.WebGLRenderer({\r\n        canvas: this.$refs.container\r\n      });\r\n      this.render.setSize(w, h);\r\n      // this.$refs.container.appendChild(this.render.domElement);\r\n      this.camera = new THREE.PerspectiveCamera(\r\n        this.cameraOpt.angle,\r\n        w / h,\r\n        this.cameraOpt.min,\r\n        this.cameraOpt.max\r\n      );\r\n      this.camera.position.set(0, -80, 80);\r\n      this.camera.lookAt(0, 0, 0);\r\n      this.scene = new THREE.Scene();\r\n    },\r\n    renderSystem(path, nums) {\r\n      const positions = [];\r\n      const colors = [];\r\n      const sizes = [];\r\n      const radius = 100;\r\n      const texture = new THREE.TextureLoader().load(path);\r\n      texture.wrapS = THREE.RepeatWrapping;\r\n      texture.wrapT = THREE.RepeatWrapping;\r\n      texture.repeat.set(4, 4);\r\n      const shaderMaterial = new THREE.ShaderMaterial({\r\n        uniforms: {\r\n          pointTexture: { value: texture }\r\n        },\r\n        vertexShader: `\r\n                attribute float size;\r\n                varying vec3 vColor;\r\n                void main() {\r\n                    vColor = color;\r\n                    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\r\n                    gl_PointSize = size * ( 300.0 / -mvPosition.z );\r\n                    gl_Position = projectionMatrix * mvPosition;\r\n                }\r\n            `,\r\n        fragmentShader: `\r\n                uniform sampler2D pointTexture;\r\n                varying vec3 vColor;\r\n                void main() {\r\n                      gl_FragColor = texture2D( pointTexture , gl_PointCoord);\r\n                }\r\n            `,\r\n        // blending: THREE.AdditiveBlending,\r\n        depthTest: true,\r\n        transparent: true,\r\n        vertexColors: THREE.VertexColors\r\n      });\r\n      const color = new THREE.Color();\r\n      for (let i = 0; i < nums; i++) {\r\n        positions.push((Math.random() * 2 - 1) * radius);\r\n        positions.push((Math.random() * 2 - 1) * radius);\r\n        positions.push((Math.random() * 2 - 1) * radius);\r\n        // color.setHSL( i / nums, 1.0, 0.5 );\r\n        colors.push(color.r, color.g, color.b);\r\n        sizes.push(2);\r\n      }\r\n      const geometry = new THREE.BufferGeometry();\r\n      geometry.setAttribute(\r\n        \"position\",\r\n        new THREE.Float32BufferAttribute(positions, 3)\r\n      );\r\n      geometry.setAttribute(\r\n        \"color\",\r\n        new THREE.Float32BufferAttribute(colors, 3)\r\n      );\r\n      geometry.setAttribute(\r\n        \"size\",\r\n        new THREE.Float32BufferAttribute(sizes, 1).setUsage(\r\n          THREE.DynamicDrawUsage\r\n        )\r\n      );\r\n\r\n      this.system = new THREE.Points(geometry, shaderMaterial);\r\n      this.scene.add(this.system);\r\n    },\r\n    renderCube() {\r\n      const cubeGeometry = new THREE.BoxBufferGeometry(20, 20, 20);\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: 0xffff00\r\n      });\r\n      this.cube = new THREE.Mesh(cubeGeometry, material);\r\n      this.scene.add(this.cube);\r\n    },\r\n    animation() {\r\n      if (this.cube) {\r\n        this.cube.rotation.x += 0.01;\r\n        this.cube.rotation.y += 0.01;\r\n      }\r\n      if (this.system) {\r\n        this.system.position.z =\r\n          this.system.position.z < 0 ? 100 : this.system.position.z - 1;\r\n      }\r\n      this.render.render(this.scene, this.camera);\r\n      requestAnimationFrame(() => {\r\n        if (this.player) {\r\n          this.animation();\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./threeSprite.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./threeSprite.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./threeSprite.vue?vue&type=template&id=6282ba13&scoped=true&\"\nimport script from \"./threeSprite.vue?vue&type=script&lang=js&\"\nexport * from \"./threeSprite.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6282ba13\",\n  null\n  \n)\n\nexport default component.exports","var $ = require('../internals/export');\nvar repeat = require('../internals/string-repeat');\n\n// `String.prototype.repeat` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\n$({ target: 'String', proto: true }, {\n  repeat: repeat\n});\n","module.exports = __webpack_public_path__ + \"img/water.7dff6f31.png\";"],"sourceRoot":""}